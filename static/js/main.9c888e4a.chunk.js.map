{"version":3,"sources":["components/patryk/head.tsx","components/cake/cake.tsx","bd-cake/bdCake.tsx","home/home.tsx","components/button/button.tsx","video/video.tsx","components/card/card-text/cardtext.tsx","components/card/card-front/cardFront.tsx","bd-card/bdCard.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Head","className","id","Cake","BDCake","Home","Button","toURL","btnText","href","Video","title","width","height","src","CardText","role","aria-label","CardFront","useState","cardClass","setClass","onClick","BDCard","App","path","exact","Boolean","window","location","hostname","match","history","createBrowserHistory","app","document","getElementById","exec","hash","replace","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9c888e4a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.scss\";\r\n\r\nconst Head = () => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"border-circle\" id=\"one\"></div>\r\n      <div className=\"border-circle\" id=\"two\"></div>\r\n      <div className=\"background-circle\">\r\n        <div className=\"triangle-light\"></div>\r\n        <div className=\"body\"></div>\r\n        <div className=\"triangle-dark\"></div>\r\n      </div>\r\n      <div className=\"head\">\r\n        <div className=\"ear\" id=\"left\"></div>\r\n        <div className=\"ear\" id=\"right\"></div>\r\n        <div className=\"hair-main\">\r\n          <div className=\"sideburn\" id=\"left\"></div>\r\n          <div className=\"sideburn\" id=\"right\"></div>\r\n          <div className=\"hair-top\"></div>\r\n        </div>\r\n        <div className=\"face\">\r\n          <div className=\"hair-bottom\"></div>\r\n          <div className=\"nose\"></div>\r\n          <div className=\"eye-shadow\" id=\"left\">\r\n            <div className=\"eyebrow\"></div>\r\n            <div className=\"eye\"></div>\r\n          </div>\r\n          <div className=\"eye-shadow\" id=\"right\">\r\n            <div className=\"eyebrow\"></div>\r\n            <div className=\"eye\"></div>\r\n          </div>\r\n          <div className=\"mouth\"></div>\r\n          <div className=\"shadow-wrapper\">\r\n            <div className=\"shadow\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <span className=\"music-note\" id=\"one\">\r\n        &#9835;\r\n      </span>\r\n      <span className=\"music-note\" id=\"two\">\r\n        &#9834;\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\nexport default Head;\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\n\r\nconst Cake = () => {\r\n  return (\r\n    <div className=\"cake\">\r\n      <div className=\"plate\"></div>\r\n      <div className=\"layer layer-bottom\"></div>\r\n      <div className=\"layer layer-middle\"></div>\r\n      <div className=\"layer layer-top\"></div>\r\n      <div className=\"icing\"></div>\r\n      <div className=\"drip drip1\"></div>\r\n      <div className=\"drip drip2\"></div>\r\n      <div className=\"drip drip3\"></div>\r\n      <div className=\"candle\">\r\n        <div className=\"flame\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cake;\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\n\r\nimport Head from \"../components/patryk/head\";\r\nimport Cake from \"../components/cake/cake\";\r\n\r\nconst BDCake = () => {\r\n  return (\r\n    <div className=\"bd-cake\">\r\n      <Head />\r\n      <Cake />\r\n    </div>\r\n  );\r\n};\r\nexport default BDCake;\r\n","import React from \"react\";\r\n\r\nconst Home = () => {\r\n  return <div></div>;\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\n\r\nconst Button = ({ toURL = \"\", btnText = \"\" }) => {\r\n  return (\r\n    <a href={toURL} className=\"button-wrapper\">\r\n      <button className=\"learn-more\">{btnText}</button>\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nconst Video = () => {\r\n  return (\r\n    <div className=\"bd-cake\">\r\n      <iframe\r\n        title=\"Lemonade\"\r\n        width=\"619\"\r\n        height=\"445\"\r\n        src=\"https://www.youtube.com/embed/o7cCJqya7wc\"\r\n      ></iframe>\r\n    </div>\r\n  );\r\n};\r\nexport default Video;\r\n","import React from \"react\";\r\n\r\nconst CardText = () => {\r\n  return (\r\n    <div className=\"text-container\">\r\n      <p>Dear Patricio</p>\r\n         <p>I want to tell you:</p>\r\n         <p> HAPPY BIRTHDAY!!</p> \r\n         <p>I know you don't like celebrating it, but I like to tell you how special you are.</p>\r\n         <p>You are the best as always, I really feel lucky I've got you by my side in our journey. As iritating sometimes we(you) can be, you will\r\n           always have your place in my <span role=\"img\" aria-label=\"heart\">❤️</span>  \r\n         </p>\r\n         <p>You always bring joy to all those gloomy hopeless days. Even if it's not forever that we are in others lives, I want\r\n           to precious whatever we have left.\r\n         </p>\r\n         <p>I hope each and every day you can be happy and achieve anything in life, I will always be there for you and support you.\r\n         </p>\r\n         <p className=\"signed mb0\"> With a lot of love, \r\n         </p>\r\n         <p className=\"signed mt0\"> Jenny, your mini bastardo\r\n         </p>\r\n    </div>\r\n  );\r\n};\r\nexport default CardText;\r\n","import React, { useState } from \"react\";\r\nimport CardText from \"../card-text/cardtext\";\r\nimport \"./style.scss\";\r\nconst CardFront = () => {\r\n  const [cardClass, setClass] = useState(\"\")\r\n\r\n  return (\r\n    <div id=\"card\" className={cardClass}>\r\n      <div id=\"card-inside\">\r\n        <div className=\"wrap\">\r\n          <CardText/>\r\n        </div>\r\n      </div>\r\n\r\n      <div id=\"card-front\">\r\n        <div className=\"wrap\">\r\n          <h1>Happy Birthday! Patricio</h1>\r\n        </div>\r\n        <button id=\"open\" onClick={() => setClass(\"open-fully\")}>&gt;</button>\r\n        <button id=\"close\" onClick={() => setClass(\"\")}>&lt;</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CardFront;\r\n","import React from \"react\";\r\nimport CardFront from \"../components/card/card-front/cardFront\";\r\nconst BDCard = () => {\r\n  return (\r\n    <div>\r\n      <CardFront />\r\n    </div>\r\n  );\r\n};\r\nexport default BDCard;\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport BDCake from \"./bd-cake/bdCake\";\r\nimport Home from \"./home/home\";\r\nimport Button from \"./components/button/button\";\r\nimport Video from \"./video/video\";\r\nimport BDCard from \"./bd-card/bdCard\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"root-container\">\r\n      <Router>\r\n        <div className=\"container\">\r\n          <nav className=\"nav-bar\">\r\n            <Button toURL=\"/home\" btnText=\"Home\" />\r\n            <Button toURL=\"/bdCake\" btnText=\"Birthday Cake\" />\r\n            <Button toURL=\"/bdCard\" btnText=\"Birthday Card\" />\r\n            <Button toURL=\"/fav-video\" btnText=\"Your favourite video\" />\r\n          </nav>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/bdCake\" exact>\r\n              <BDCake />\r\n            </Route>\r\n            <Route path=\"/bdCard\" exact>\r\n              <BDCard />\r\n            </Route>\r\n            <Route path=\"/fav-video\" exact>\r\n              <Video />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { createBrowserHistory } from 'history';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst history = createBrowserHistory();\r\nlet app = document.getElementById('root');\r\nif (app) {\r\n  // 1. Set up the browser history with the updated location\r\n  // (minus the # sign)\r\nconst path = (/#!(\\/.*)$/.exec(window.location.hash) || [])[1];\r\nif (path) {\r\n  history.replace(path);\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  app\r\n);\r\n}\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}